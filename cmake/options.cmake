set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

set(Boost_USE_STATIC_LIBS ON)

if(WIN32)
    set(Boost_USE_STATIC_RUNTIME ON)
endif()

option(CLUEAPI_USE_NLOHMANN_JSON "Enable nlohmann/json support" ON)
option(CLUEAPI_USE_CUSTOM_JSON "Enable custom json support" OFF)

option(CLUEAPI_USE_LOGGING_MODULE "Enable logging module support" ON)
option(CLUEAPI_USE_DOTENV_MODULE "Enable dotenv module support" ON)
option(CLUEAPI_USE_REDIS_MODULE "Enable redis module support" ON)

option(CLUEAPI_USE_RTTI "Use RTTI" OFF)

option(CLUEAPI_ENABLE_ASAN "Enable address sanitizer" OFF)
option(CLUEAPI_ENABLE_TSAN "Enable thread sanitizer" OFF)
option(CLUEAPI_ENABLE_UBSAN "Enable undefined behavior sanitizer" OFF)

option(CLUEAPI_ENABLE_IPO "Enable IPO/LTO" ON)
option(CLUEAPI_ENABLE_EXTRA_OPTIMIZATIONS "Enable extra optimizations" ON)
option(CLUEAPI_ENABLE_WARNINGS "Enable warnings" OFF)

option(CLUEAPI_BUILD_TESTS "Build tests" OFF)

set(CLUEAPI_OPTIMIZED_LOG_LEVEL INFO CACHE STRING "Optimized log level: TRACE, DEBUG, INFO, WARNING, ERROR, CRITICAL, NONE")

set_property(CACHE CLUEAPI_OPTIMIZED_LOG_LEVEL PROPERTY STRINGS TRACE DEBUG INFO WARNING ERROR CRITICAL NONE)

set(LOG_LEVELS "TRACE;DEBUG;INFO;WARNING;ERROR;CRITICAL;NONE")

list(FIND LOG_LEVELS ${CLUEAPI_OPTIMIZED_LOG_LEVEL} CLUEAPI_LOG_LEVEL_NUM)

if(CLUEAPI_LOG_LEVEL_NUM EQUAL -1)
    set(CLUEAPI_LOG_LEVEL_NUM 2)

    message(WARNING "Unknown log level: ${CLUEAPI_OPTIMIZED_LOG_LEVEL}, defaulting to INFO (2)")
endif()

add_compile_definitions(CLUEAPI_OPTIMIZED_LOG_LEVEL=${CLUEAPI_LOG_LEVEL_NUM})

if(CLUEAPI_USE_CUSTOM_JSON)
    set(CLUEAPI_USE_NLOHMANN_JSON OFF)
endif()

if(WIN32)
    add_compile_definitions(_WIN32_WINNT=0x0A00)
endif()

message(STATUS "CLUEAPI configuration summary:")
message(STATUS "  CLUEAPI_USE_NLOHMANN_JSON = ${CLUEAPI_USE_NLOHMANN_JSON}")
message(STATUS "  CLUEAPI_USE_CUSTOM_JSON = ${CLUEAPI_USE_CUSTOM_JSON}")
message(STATUS "  CLUEAPI_USE_LOGGING_MODULE = ${CLUEAPI_USE_LOGGING_MODULE}")
message(STATUS "  CLUEAPI_OPTIMIZED_LOG_LEVEL = ${CLUEAPI_OPTIMIZED_LOG_LEVEL} (${CLUEAPI_LOG_LEVEL_NUM})")
message(STATUS "  CLUEAPI_USE_DOTENV_MODULE = ${CLUEAPI_USE_DOTENV_MODULE}")
message(STATUS "  CLUEAPI_USE_REDIS_MODULE = ${CLUEAPI_USE_REDIS_MODULE}")
message(STATUS "  CLUEAPI_USE_RTTI = ${CLUEAPI_USE_RTTI}")
message(STATUS "  CLUEAPI_BUILD_TESTS = ${CLUEAPI_BUILD_TESTS}")
message(STATUS "  CLUEAPI_ENABLE_IPO = ${CLUEAPI_ENABLE_IPO}")
message(STATUS "  CLUEAPI_ENABLE_EXTRA_OPTIMIZATIONS = ${CLUEAPI_ENABLE_EXTRA_OPTIMIZATIONS}")
message(STATUS "  CLUEAPI_ENABLE_WARNINGS = ${CLUEAPI_ENABLE_WARNINGS}")
message(STATUS "  CLUEAPI_ENABLE_ASAN = ${CLUEAPI_ENABLE_ASAN}")
message(STATUS "  CLUEAPI_ENABLE_TSAN = ${CLUEAPI_ENABLE_TSAN}")
message(STATUS "  CLUEAPI_ENABLE_UBSAN = ${CLUEAPI_ENABLE_UBSAN}")